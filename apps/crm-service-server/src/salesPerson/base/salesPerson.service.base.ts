/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, SalesPerson as PrismaSalesPerson } from "@prisma/client";

export class SalesPersonServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.SalesPersonCountArgs, "select">
  ): Promise<number> {
    return this.prisma.salesPerson.count(args);
  }

  async salesPeople(
    args: Prisma.SalesPersonFindManyArgs
  ): Promise<PrismaSalesPerson[]> {
    return this.prisma.salesPerson.findMany(args);
  }
  async salesPerson(
    args: Prisma.SalesPersonFindUniqueArgs
  ): Promise<PrismaSalesPerson | null> {
    return this.prisma.salesPerson.findUnique(args);
  }
  async createSalesPerson(
    args: Prisma.SalesPersonCreateArgs
  ): Promise<PrismaSalesPerson> {
    return this.prisma.salesPerson.create(args);
  }
  async updateSalesPerson(
    args: Prisma.SalesPersonUpdateArgs
  ): Promise<PrismaSalesPerson> {
    return this.prisma.salesPerson.update(args);
  }
  async deleteSalesPerson(
    args: Prisma.SalesPersonDeleteArgs
  ): Promise<PrismaSalesPerson> {
    return this.prisma.salesPerson.delete(args);
  }
}
